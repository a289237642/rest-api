"""
Django settings for AtguiguShop project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

sys.path.insert(0, BASE_DIR)
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))
sys.path.insert(0, os.path.join(BASE_DIR, "extra_apps"))
# print("BASE_DIR==",BASE_DIR)
# print("sys.path[0]==",sys.path[0])
# print("sys.path[1]==",sys.path[1])
# print("sys.path[2]==",sys.path[2])

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'kmy(9gfdnbn*dm64qrs&7ro6y1&-+%@6ei6!2r^l!moykn^)0m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# 任何主机都可以访问
ALLOWED_HOSTS = ["*"]

# 替换系统的用户
AUTH_USER_MODEL = "users.UserProfile"

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users.apps.UsersConfig',
    'goods.apps.GoodsConfig',
    'DjangoUeditor',  # 富文本
    'trade.apps.TradeConfig',
    'user_operation.apps.UserOperationConfig',
    'xadmin',  # 第三方后台管理
    'crispy_forms',
    'rest_framework',
    'django_filters',  # 过滤器
    'corsheaders',  # 支持跨域请求
    'rest_framework.authtoken',  # TokenAuthentication认证的配置
    'social_django',  # 微博第三方登录
    'raven.contrib.django.raven_compat',  # 手机错误日志的库
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AtguiguShop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]
# 允许跨域请求
CORS_ORIGIN_ALLOW_ALL = True

WSGI_APPLICATION = 'AtguiguShop.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 使用mysql
        'NAME': 'atguigu_shop',  # 数据库名称
        # 'USER': 'afu',  # 连接数据库的账号
        'USER': 'root',  # 连接数据库的账号
        'PASSWORD': 'mysql',  # 阿里云密码
        # 'PASSWORD': '123456',  # 阿里云密码
        # 'PASSWORD' :'afu123456',#连接数据库的密码
        # 'HOST': '118.190.202.67',  # 或者localhost，阿里云主机
        'HOST': '127.0.0.1',  # 或者localhost，阿里云主机
        'PORT': 3306,  # 端口
        # 'OPTIONS': { 'init_command': 'SET storage_engine=INNODB' }#django1.2
        # "OPTIONS":{"init_command":"SET default_storage_engine=INNODB;"}#django1.11
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/


# 设置中文
LANGUAGE_CODE = 'zh-hans'  # 中文支持，django1.8以后支持；1.8以前是zh-cn
# 设置时区
TIME_ZONE = 'Asia/Shanghai'
# 国际化
USE_I18N = True

USE_L10N = True
# 默认是Ture，时间是utc时间，由于我们要用本地时间，所用手动修改为false！！！！
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
# 配置静态资源路径
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)

# 配置media的url
MEDIA_URL = "/media/"
# 加入到环境变量
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
##C:\Users\Administrator\PycharmProjects\AtguiguShop\media
# print("MEDIA_ROOT==",MEDIA_ROOT)

# 以后REST_FRAMEWORK的配置都在这里
# REST_FRAMEWORK = {
#     #rest_framework目录下的pagination.py文件PageNumberPagination类
#     'DEFAULT_PAGINATION_CLASS': "rest_framework.pagination.PageNumberPagination",
#     #每页显示10条数据
#     'PAGE_SIZE': 10,
# }

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',
        # JSONWebTokenAuthentication这个JWT认证最后放在某个接口里面
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),

    'DEFAULT_THROTTLE_CLASSES': (
        # 用户未登录，根据ip地址判断
        'rest_framework.throttling.AnonRateThrottle',
        # 用户登录，通过token判断也就是Session判断,用户登录后也要限制
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        # 具体设置多少，根据网站的运营情况
        # 'anon': '100/day',
        # 'user': '1000/day',
        'anon': '20/minute',
        'user': '30/minute'
    }
}

# 配置用户登录后台验证
AUTHENTICATION_BACKENDS = (
    'users.views.CustomModelBackend',
    'django.contrib.auth.backends.ModelBackend',
    'social_core.backends.weibo.WeiboOAuth2',  # 微博登陆认证
    'social_core.backends.qq.QQOAuth2',  # QQ登录认证
    'social_core.backends.weixin.WeixinOAuth2',  # 微信登录认证
)

import datetime

JWT_AUTH = {
    # 300秒后到期，修改成7天后到期
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=7),
    # 自定义前缀，使用默认的就行，否则前端也要修改
    'JWT_AUTH_HEADER_PREFIX': 'JWT',

}

# 手机号码的正则表达式
REGEX_MOBILE = "^1[345678]\d{9}$"

# 支付宝相关配置

# 应用私钥
private_key_path = os.path.join(BASE_DIR, "apps/trade/keys/private_2048.txt")
# 支付宝公钥
ali_public_path = os.path.join(BASE_DIR, "apps/trade/keys/alipay_key_2048.txt")

# 配置drf-extensions缓存超时
REST_FRAMEWORK_EXTENSIONS = {
    'DEFAULT_CACHE_RESPONSE_TIMEOUT': 15 * 60
}

# django-redis缓存配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# 第三方登录配置
# 微博
SOCIAL_AUTH_WEIBO_KEY = '733286461'
SOCIAL_AUTH_WEIBO_SECRET = '29736113f69dd6d676b70860af7fbbe0'
# 微信
SOCIAL_AUTH_WEIXIN_KEY = 'foobar'
SOCIAL_AUTH_WEIXIN_SECRET = 'bazqux'
# QQ
SOCIAL_AUTH_QQ_KEY = 'foobar'
SOCIAL_AUTH_QQ_SECRET = 'bazqux'

SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/index/'

# 配置sentry发送错误日志到服务器上
RAVEN_CONFIG = {
    'dsn': 'http://d15887e30b5b484ebf73ca30f6b61c5e:bad3446ce56e42a2b30fd959ef5b94c2@118.190.202.67:9000/3',
}
